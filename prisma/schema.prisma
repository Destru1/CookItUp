// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider  = "postgresql"
    url       = env("DATABASE_URL")
    directUrl = env("DIRECT_URL")
}

model User {
    id           String    @id @default(cuid())
    name         String
    email        String    @unique
    password     String?
    favouriteIds String[]  @default([])
    createdAt    DateTime  @default(now())
    updatedAt    DateTime  @updatedAt
    recipes      Recipe[] // One-to-many relation with Recipe
    comments     Comment[] // One-to-many relation with Comment
    accounts     Account[]
}

model Account {
    id                String  @id @default(cuid())
    userId            String  @map("user_id")
    type              String
    provider          String
    providerAccountId String  @map("provider_account_id")
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
    @@map("accounts")
}

model Recipe {
    id        String    @id @default(cuid())
    title     String
    content   String
    servings  Int
    prepTime  Int // Time in minutes
    cookTime  Int // Time in minutes
    likeCount Int       @default(0)
    createdAt DateTime  @default(now())
    updatedAt DateTime  @updatedAt
    userId    String
    comments  Comment[]
    user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@index([title])
}

model Comment {
    id        String   @id @default(cuid())
    content   String
    userId    String
    recipeId  String
    user      User     @relation(fields: [userId], references: [id])
    recipe    Recipe   @relation(fields: [recipeId], references: [id])
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@index([userId])
    @@index([recipeId])
}
